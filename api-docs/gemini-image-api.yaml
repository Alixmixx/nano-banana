openapi: 3.0.3
info:
  title: Google Gemini Image Generation API
  description: |
    Complete API specification for Google's Gemini Image Generation capabilities, 
    including text-to-image generation, image editing, multi-image composition, 
    and advanced features like inpainting and style transfer.
    
    This API uses the Gemini 2.5 Flash Image Preview model for high-quality 
    image generation with built-in watermarking and comprehensive editing capabilities.
  version: 1.0.0
  contact:
    name: Google AI Studio
    url: https://aistudio.google.com
  license:
    name: Google AI Terms of Service
    url: https://ai.google.dev/terms

servers:
  - url: https://generativelanguage.googleapis.com/v1beta
    description: Google Generative Language API
  - url: http://localhost:8000
    description: Local FastAPI implementation

security:
  - ApiKeyAuth: []

tags:
  - name: text-to-image
    description: Generate images from text descriptions
  - name: image-editing
    description: Modify existing images with text prompts
  - name: multi-image
    description: Compose multiple images into new creations
  - name: chat
    description: Interactive conversational image generation
  - name: advanced
    description: Advanced editing techniques (inpainting, outpainting, etc.)
  - name: story
    description: Sequential image generation for stories and recipes

paths:
  /generate-image:
    post:
      tags:
        - text-to-image
      summary: Generate image from text
      description: |
        Create high-quality images from text descriptions using the Gemini 2.5 Flash Image Preview model.
        
        **Key Features:**
        - Supports hyper-specific, narrative prompts
        - Optimal performance up to 1024x1024 pixels
        - All images include SynthID watermark
        - Professional photography and artistic style capabilities
      operationId: generateImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToImageRequest'
            examples:
              product_photo:
                summary: Product Photography
                value:
                  prompt: "A professional high-end product photograph of a sleek, modern smartphone lying on a clean white marble surface, shot from a 45-degree angle with soft diffused lighting from the left side, creating subtle shadows. The phone has a metallic silver finish with a large, clear screen displaying the home screen. Studio photography, sharp focus, minimalist composition, white background."
                  model: "gemini-2.5-flash-image-preview"
                  response_modalities: ["Text", "Image"]
              artistic_scene:
                summary: Artistic Scene
                value:
                  prompt: "A serene Japanese garden in autumn, with a traditional wooden bridge crossing over a koi pond, surrounded by maple trees with brilliant red and orange leaves. Soft morning mist rises from the water, and a few koi fish are visible beneath the surface. Traditional Japanese art style with vibrant colors and balanced composition."
                  model: "gemini-2.5-flash-image-preview"
                  response_modalities: ["Image"]
      responses:
        '200':
          description: Image generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'
              examples:
                successful_generation:
                  summary: Successful image generation
                  value:
                    text: ["Here is your professional product photograph of a modern smartphone:"]
                    images: ["base64_encoded_image_data"]
                    metadata:
                      model: "gemini-2.5-flash-image-preview"
                      prompt_tokens: 45
                      completion_tokens: 1290
                      total_tokens: 1335
                      generation_time: 3.2
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'

  /edit-image:
    post:
      tags:
        - image-editing
      summary: Edit existing images
      description: |
        Modify existing images using text instructions. Supports various editing techniques 
        including background replacement, style changes, object modification, and detail enhancement.
        
        **Capabilities:**
        - Semantic editing through natural language
        - Background replacement and modification
        - Style transfer and artistic effects
        - Object addition/removal/modification
        - Quality enhancement and detail improvement
      operationId: editImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageEditRequest'
            examples:
              background_replacement:
                summary: Replace background
                value:
                  prompt: "Replace the background with a beautiful sunset beach scene, keeping the person exactly as they are"
                  model: "gemini-2.5-flash-image-preview"
      responses:
        '200':
          description: Image edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          description: Image file too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/ServerError'

  /compose-images:
    post:
      tags:
        - multi-image
      summary: Compose multiple images
      description: |
        Combine 2-3 images into new compositions using text instructions.
        
        **Use Cases:**
        - Subject replacement between images
        - Style transfer from one image to another
        - Background swapping and blending
        - Product mockups and lifestyle shots
        - Creative compositions and collages
      operationId: composeImages
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiImageRequest'
      responses:
        '200':
          description: Images composed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /chat/create:
    post:
      tags:
        - chat
      summary: Create chat session
      description: |
        Initialize a new conversational session for iterative image generation and refinement.
        
        Chat sessions maintain context across multiple interactions, allowing for:
        - Iterative image improvements
        - Step-by-step refinements
        - Contextual modifications
        - Progressive enhancement
      operationId: createChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreateRequest'
      responses:
        '200':
          description: Chat session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'

  /chat/{sessionId}/message:
    post:
      tags:
        - chat
      summary: Send chat message
      description: |
        Send a message to an existing chat session for iterative image generation.
        
        **Features:**
        - Maintains conversation context
        - Supports text-only and image+text inputs
        - Enables progressive refinement
        - Tracks conversation history
      operationId: sendChatMessage
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Chat session identifier
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
      responses:
        '200':
          description: Message processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'
        '404':
          description: Chat session not found

  /story/generate:
    post:
      tags:
        - story
      summary: Generate sequential images
      description: |
        Create sequences of related images for stories, recipes, tutorials, or other narrative content.
        
        **Content Types:**
        - Story narratives (2-15 images)
        - Recipe step-by-step guides
        - Tutorial sequences
        - Comic-style panels
        - Custom sequential content
      operationId: generateStory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryGenerationRequest'
      responses:
        '200':
          description: Story sequence generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryGenerationResponse'

  /advanced/inpaint:
    post:
      tags:
        - advanced
      summary: Inpaint image regions
      description: |
        Modify specific regions within an image using semantic descriptions.
        
        **Capabilities:**
        - Region-specific modifications
        - Object replacement within scenes
        - Detail enhancement in targeted areas
        - Seamless blending with existing content
      operationId: inpaintImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InpaintRequest'
      responses:
        '200':
          description: Inpainting completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'

  /advanced/outpaint:
    post:
      tags:
        - advanced
      summary: Extend image boundaries
      description: |
        Extend images beyond their current boundaries in specified directions.
        
        **Options:**
        - Extend in all directions
        - Extend specific sides (top, bottom, left, right)
        - Maintain style consistency
        - Natural scene continuation
      operationId: outpaintImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OutpaintRequest'
      responses:
        '200':
          description: Outpainting completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'

  /advanced/style-transfer:
    post:
      tags:
        - advanced
      summary: Transfer artistic styles
      description: |
        Apply artistic styles to images, either from predefined styles or reference images.
        
        **Style Options:**
        - Classic artists (Van Gogh, Picasso, Monet, etc.)
        - Art movements (Impressionism, Cubism, Abstract, etc.)
        - Modern styles (Anime, Digital Art, Photography styles)
        - Custom style from reference images
      operationId: styleTransfer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StyleTransferRequest'
      responses:
        '200':
          description: Style transfer completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Use "Bearer YOUR_API_KEY" format

  schemas:
    TextToImageRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          description: |
            Detailed text description for image generation. Best practices:
            - Use narrative, descriptive language
            - Include lighting, composition, and style details
            - Specify camera angles and moods
            - Be hyper-specific rather than using keyword lists
          example: "A professional headshot of a confident businesswoman in her 40s, wearing a navy blue blazer, gentle smile, shot with an 85mm lens at f/2.8, soft natural lighting from a large window, clean white background, corporate photography style"
          minLength: 10
          maxLength: 2000
        model:
          type: string
          description: Gemini model to use for generation
          default: "gemini-2.5-flash-image-preview"
          enum:
            - "gemini-2.5-flash-image-preview"
        response_modalities:
          type: array
          description: Types of content to include in response
          items:
            type: string
            enum: ["Text", "Image"]
          default: ["Text", "Image"]
        temperature:
          type: number
          description: Controls randomness in generation (0.0-2.0)
          minimum: 0.0
          maximum: 2.0
          default: 1.0
        top_k:
          type: integer
          description: Limits token selection to top K options
          minimum: 1
          maximum: 100
          default: 40
        top_p:
          type: number
          description: Nucleus sampling threshold
          minimum: 0.0
          maximum: 1.0
          default: 0.95

    ImageEditRequest:
      type: object
      required:
        - prompt
        - image
      properties:
        prompt:
          type: string
          description: Instructions for editing the image
          example: "Replace the background with a sunset beach scene, keeping the person exactly as they are"
          minLength: 5
          maxLength: 1000
        image:
          type: string
          format: binary
          description: Image file to edit (PNG, JPG, JPEG)
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"
          enum:
            - "gemini-2.5-flash-image-preview"
        preserve_subject:
          type: boolean
          description: Whether to preserve the main subject during editing
          default: true
        edit_strength:
          type: number
          description: Strength of the editing effect (0.1-1.0)
          minimum: 0.1
          maximum: 1.0
          default: 0.8

    MultiImageRequest:
      type: object
      required:
        - prompt
        - images
      properties:
        prompt:
          type: string
          description: Instructions for combining the images
          example: "Combine the person from image 1 with the background from image 2, making it look like a professional portrait"
          minLength: 10
          maxLength: 1000
        images:
          type: array
          description: Images to combine (2 or more images)
          items:
            type: string
            format: binary
          minItems: 2
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"
        composition_style:
          type: string
          description: Style of composition
          enum:
            - "blend"
            - "replace"
            - "overlay"
            - "montage"
          default: "blend"

    ChatCreateRequest:
      type: object
      properties:
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"
        system_prompt:
          type: string
          description: Initial system instructions for the chat session
          example: "You are an expert image generation assistant. Help refine and improve images iteratively."

    ChatMessageRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Text message or instruction
          example: "Make the lighting warmer and more golden"
        image:
          type: string
          format: binary
          description: Optional image to include with message
        continue_generation:
          type: boolean
          description: Whether to continue from previous generation
          default: true

    StoryGenerationRequest:
      type: object
      required:
        - description
        - num_images
      properties:
        description:
          type: string
          description: Overall description of the story or sequence
          example: "A recipe for making chocolate chip cookies, showing each major step"
          minLength: 20
          maxLength: 2000
        num_images:
          type: integer
          description: Number of images in the sequence
          minimum: 2
          maximum: 15
          default: 4
        content_type:
          type: string
          description: Type of sequential content
          enum:
            - "story"
            - "recipe"
            - "tutorial"
            - "comic"
            - "custom"
          default: "story"
        style:
          type: string
          description: Visual style for the sequence
          example: "photorealistic cooking photography"
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"

    InpaintRequest:
      type: object
      required:
        - prompt
        - image
      properties:
        prompt:
          type: string
          description: Description of what to paint in the specified region
          example: "A red sports car in place of the blue one"
        image:
          type: string
          format: binary
          description: Image to modify
        region_description:
          type: string
          description: Natural language description of the region to modify
          example: "the car in the center of the image"
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"

    OutpaintRequest:
      type: object
      required:
        - prompt
        - image
        - direction
      properties:
        prompt:
          type: string
          description: Description of how to extend the image
          example: "Continue the forest scene with more trees and a path leading into the distance"
        image:
          type: string
          format: binary
          description: Image to extend
        direction:
          type: array
          description: Directions to extend the image
          items:
            type: string
            enum: ["top", "bottom", "left", "right", "all"]
          minItems: 1
        extension_ratio:
          type: number
          description: How much to extend (0.1-2.0)
          minimum: 0.1
          maximum: 2.0
          default: 0.5
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"

    StyleTransferRequest:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          format: binary
          description: Image to apply style to
        style:
          type: string
          description: Predefined style name
          enum:
            - "van_gogh"
            - "picasso"
            - "monet"
            - "digital_art"
            - "anime"
            - "oil_painting"
            - "watercolor"
            - "photographic"
            - "minimalist"
            - "abstract"
        style_reference_image:
          type: string
          format: binary
          description: Optional reference image for custom style
        style_strength:
          type: number
          description: Strength of style application (0.1-1.0)
          minimum: 0.1
          maximum: 1.0
          default: 0.8
        preserve_content:
          type: boolean
          description: Whether to preserve original content structure
          default: true
        model:
          type: string
          default: "gemini-2.5-flash-image-preview"

    ImageGenerationResponse:
      type: object
      properties:
        text:
          type: array
          description: AI-generated text descriptions
          items:
            type: string
          example: ["Here is your professional product photograph of a modern smartphone:"]
        images:
          type: array
          description: Base64-encoded generated images
          items:
            type: string
            format: base64
        metadata:
          type: object
          description: Generation metadata
          properties:
            model:
              type: string
              example: "gemini-2.5-flash-image-preview"
            prompt_tokens:
              type: integer
              example: 45
            completion_tokens:
              type: integer
              example: 1290
            total_tokens:
              type: integer
              example: 1335
            generation_time:
              type: number
              description: Time taken in seconds
              example: 3.2
            image_dimensions:
              type: object
              properties:
                width:
                  type: integer
                height:
                  type: integer
            safety_ratings:
              type: array
              items:
                type: object
                properties:
                  category:
                    type: string
                  probability:
                    type: string

    StoryGenerationResponse:
      type: object
      properties:
        images:
          type: array
          description: Sequence of generated images
          items:
            type: object
            properties:
              image:
                type: string
                format: base64
              sequence_number:
                type: integer
              description:
                type: string
              timestamp:
                type: string
                format: date-time
        story_metadata:
          type: object
          properties:
            total_images:
              type: integer
            content_type:
              type: string
            generation_time:
              type: number
            total_tokens:
              type: integer

    ChatSession:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        created_at:
          type: string
          format: date-time
        model:
          type: string
          example: "gemini-2.5-flash-image-preview"
        message_count:
          type: integer
          default: 0
        context_length:
          type: integer
          description: Current context window usage

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type
          example: "invalid_request"
        message:
          type: string
          description: Human-readable error description
          example: "The prompt is too long. Maximum length is 2000 characters."
        details:
          type: object
          description: Additional error details
        request_id:
          type: string
          description: Unique request identifier for debugging

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalid_prompt:
              summary: Invalid prompt
              value:
                error: "invalid_request"
                message: "Prompt cannot be empty"
                request_id: "req_123456789"
            file_too_large:
              summary: File too large
              value:
                error: "file_too_large"
                message: "Image file must be smaller than 20MB"
                request_id: "req_123456789"

    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalid_api_key:
              summary: Invalid API key
              value:
                error: "unauthorized"
                message: "Invalid API key provided"
                request_id: "req_123456789"

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            rate_limit:
              summary: Rate limit exceeded
              value:
                error: "rate_limit_exceeded"
                message: "API rate limit exceeded. Please wait before making another request."
                request_id: "req_123456789"

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            server_error:
              summary: Server error
              value:
                error: "server_error"
                message: "An internal server error occurred. Please try again later."
                request_id: "req_123456789"